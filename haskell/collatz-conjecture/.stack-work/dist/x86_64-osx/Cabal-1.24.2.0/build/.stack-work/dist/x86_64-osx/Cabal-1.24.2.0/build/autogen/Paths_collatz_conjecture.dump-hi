
==================== FINAL INTERFACE ====================
2017-10-09 20:15:43.374681 UTC

interface collatz-conjecture-1.1.1.1-4Q7m0FsPMUFufUXTepMSJ:Paths_collatz_conjecture 8002
  interface hash: d7f43219f506f2b97ecaf75d55ac5723
  ABI hash: 560807616f618cc92f767b8c98b85d17
  export-list hash: 4575cd6e00234dc9f1c3c94b47638cc5
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: a3789016ab4d60fbb540c849e7d1074f
  sig of: Nothing
  used TH splices: False
  where
exports:
  Paths_collatz_conjecture.getBinDir
  Paths_collatz_conjecture.getDataDir
  Paths_collatz_conjecture.getDataFileName
  Paths_collatz_conjecture.getDynLibDir
  Paths_collatz_conjecture.getLibDir
  Paths_collatz_conjecture.getLibexecDir
  Paths_collatz_conjecture.getSysconfDir
  Paths_collatz_conjecture.version
module dependencies:
package dependencies: base-4.9.1.0* ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Const
                         base-4.9.1.0:Data.Monoid base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
import  -/  base-4.9.1.0:Control.Exception a76dd9666251322fe34dbcca3a0817bf
import  -/  base-4.9.1.0:Control.Exception.Base 1e106916283856f4d9caeddab92cd861
import  -/  base-4.9.1.0:Data.Version 20afc045b5bb277e8668ef72aca55a7e
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.IO eb504c57b397cf133849f8586f15dafb
import  -/  base-4.9.1.0:GHC.IO.Exception 5064be4c355632a1d1c4f2322f56ac52
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  base-4.9.1.0:System.Environment 08cb808e8e6a7821e6f8cfa76a977431
import  -/  ghc-prim-0.5.0.0:GHC.Types 89f8de4f08018c9177c98d979eae0e45
addDependentFile "/Users/felixdescoteaux/.stack/programs/x86_64-osx/ghc-8.0.2/lib/ghc-8.0.2/include/ghcversion.h"
addDependentFile ".stack-work/dist/x86_64-osx/Cabal-1.24.2.0/build/autogen/cabal_macros.h"
c54c8df7623a74b0b48b3bcb67351d61
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Paths_collatz_conjecture.$trModule2
                   Paths_collatz_conjecture.$trModule1) -}
04dd1fe75a8055efde754fecf819a4d8
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Paths_collatz_conjecture"#) -}
ddd94de3d6aff07d8586ce51f158ddc2
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "collatz-conjecture-1.1.1.1-4Q7m0FsPMUFufUXTepMSJ"#) -}
1c68e0c9615ca718db712d66ebe3a10e
  bindir :: GHC.IO.FilePath
  {- Unfolding: (GHC.CString.unpackCString#
                   "/Users/felixdescoteaux/exercism/haskell/collatz-conjecture/.stack-work/install/x86_64-osx/lts-8.21/8.0.2/bin"#) -}
9ac757a04ba9f756309ddbd83c9f0fa4
  datadir :: GHC.IO.FilePath
  {- Unfolding: (GHC.CString.unpackCString#
                   "/Users/felixdescoteaux/exercism/haskell/collatz-conjecture/.stack-work/install/x86_64-osx/lts-8.21/8.0.2/share/x86_64-osx-ghc-8.0.2/collatz-conjecture-1.1.1.1"#) -}
8eaa64d1d55afd4b261273011f503ba1
  dynlibdir :: GHC.IO.FilePath
  {- Unfolding: (GHC.CString.unpackCString#
                   "/Users/felixdescoteaux/exercism/haskell/collatz-conjecture/.stack-work/install/x86_64-osx/lts-8.21/8.0.2/lib/x86_64-osx-ghc-8.0.2"#) -}
f7539d8675a20c571d6ed73af6ad80ed
  getBinDir :: GHC.Types.IO GHC.IO.FilePath
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Paths_collatz_conjecture.getBinDir1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R)) -}
5a36913244ab6a4515764d43f91946a8
  getBinDir1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State#
                             GHC.Prim.RealWorld)[OneShot] ->
                 GHC.Prim.catch#
                   @ GHC.Base.String
                   @ GHC.Exception.SomeException
                   Paths_collatz_conjecture.getBinDir3
                     `cast`
                   (GHC.Types.N:IO[0] <GHC.Base.String>_R)
                   Paths_collatz_conjecture.getBinDir2
                   eta) -}
050785285704f2f17314070333919c80
  getBinDir2 ::
    GHC.Exception.SomeException
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 2,
     Unfolding: (\ (e1 :: GHC.Exception.SomeException)[OneShot]
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case e1 of wild { GHC.Exception.SomeException e100 $dException1 e2 ->
                 case (GHC.Exception.$p1Exception @ e100 $dException1)
                        `cast`
                      (Data.Typeable.Internal.N:Typeable[0] <*>_N <e100>_N)
                        (GHC.Prim.proxy#
                           @ *
                           @ e100) of wild1 { Data.Typeable.Internal.TypeRep dt dt1 ds2 ds3 ds4 ->
                 case GHC.IO.Exception.$fExceptionIOException3 of wild2 { Data.Typeable.Internal.TypeRep dt2 dt3 ds5 ds6 ds7 ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.eqWord# dt dt2) of wild3 {
                   GHC.Types.False
                   -> GHC.Prim.raiseIO#
                        @ GHC.Exception.SomeException
                        @ GHC.Base.String
                        wild
                        eta
                   GHC.Types.True
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.eqWord# dt1 dt3) of wild4 {
                        GHC.Types.False
                        -> GHC.Prim.raiseIO#
                             @ GHC.Exception.SomeException
                             @ GHC.Base.String
                             wild
                             eta
                        GHC.Types.True
                        -> (# eta, Paths_collatz_conjecture.bindir #) } } } } }) -}
0dcbcf3674317647380bda02087efa49
  getBinDir3 :: GHC.Types.IO GHC.Base.String
  {- Unfolding: (GHC.Magic.lazy
                   @ (GHC.Types.IO GHC.Base.String)
                   Paths_collatz_conjecture.getBinDir4
                     `cast`
                   (Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R))) -}
6f6d4d6dc689f3cf850e7293c4885f19
  getBinDir4 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1,
     Unfolding: (System.Environment.getEnv1
                   Paths_collatz_conjecture.getBinDir5) -}
af683ebbbf3597e4ecda80de4bb3afed
  getBinDir5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "collatz_conjecture_bindir"#) -}
8821697fe7beba67eb72367817947c80
  getDataDir :: GHC.Types.IO GHC.IO.FilePath
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Paths_collatz_conjecture.getDataDir1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R)) -}
12cbcd0184d664c39e0f2771af86bf28
  getDataDir1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State#
                             GHC.Prim.RealWorld)[OneShot] ->
                 GHC.Prim.catch#
                   @ GHC.Base.String
                   @ GHC.Exception.SomeException
                   Paths_collatz_conjecture.getDataDir3
                     `cast`
                   (GHC.Types.N:IO[0] <GHC.Base.String>_R)
                   Paths_collatz_conjecture.getDataDir2
                   eta) -}
2b97c6a0a4cd3fbaab6d5665970682ca
  getDataDir2 ::
    GHC.Exception.SomeException
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 2,
     Unfolding: (\ (e1 :: GHC.Exception.SomeException)[OneShot]
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case e1 of wild { GHC.Exception.SomeException e100 $dException1 e2 ->
                 case (GHC.Exception.$p1Exception @ e100 $dException1)
                        `cast`
                      (Data.Typeable.Internal.N:Typeable[0] <*>_N <e100>_N)
                        (GHC.Prim.proxy#
                           @ *
                           @ e100) of wild1 { Data.Typeable.Internal.TypeRep dt dt1 ds2 ds3 ds4 ->
                 case GHC.IO.Exception.$fExceptionIOException3 of wild2 { Data.Typeable.Internal.TypeRep dt2 dt3 ds5 ds6 ds7 ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.eqWord# dt dt2) of wild3 {
                   GHC.Types.False
                   -> GHC.Prim.raiseIO#
                        @ GHC.Exception.SomeException
                        @ GHC.Base.String
                        wild
                        eta
                   GHC.Types.True
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.eqWord# dt1 dt3) of wild4 {
                        GHC.Types.False
                        -> GHC.Prim.raiseIO#
                             @ GHC.Exception.SomeException
                             @ GHC.Base.String
                             wild
                             eta
                        GHC.Types.True
                        -> (# eta, Paths_collatz_conjecture.datadir #) } } } } }) -}
9b5dda0edfc5fa7834a3062317c7293b
  getDataDir3 :: GHC.Types.IO GHC.Base.String
  {- Unfolding: (GHC.Magic.lazy
                   @ (GHC.Types.IO GHC.Base.String)
                   Paths_collatz_conjecture.getDataDir4
                     `cast`
                   (Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R))) -}
3f87ee8deb9de3d2b66421d1a00cc702
  getDataDir4 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1,
     Unfolding: (System.Environment.getEnv1
                   Paths_collatz_conjecture.getDataDir5) -}
012030e693294a2c277ba45a8130684f
  getDataDir5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "collatz_conjecture_datadir"#) -}
b90812146d79c18b6e84fdba5a9e3c08
  getDataFileName :: GHC.IO.FilePath -> GHC.Types.IO GHC.IO.FilePath
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Paths_collatz_conjecture.getDataFileName1
                  `cast`
                (<GHC.IO.FilePath>_R
                 ->_R Sym (GHC.Types.N:IO[0] <GHC.IO.FilePath>_R)) -}
fb2c854642fbbfff4068d3e00134b341
  getDataFileName1 ::
    GHC.IO.FilePath
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.IO.FilePath #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (name :: GHC.IO.FilePath)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.catch#
                        @ GHC.Base.String
                        @ GHC.Exception.SomeException
                        Paths_collatz_conjecture.getDataDir3
                          `cast`
                        (GHC.Types.N:IO[0] <GHC.Base.String>_R)
                        Paths_collatz_conjecture.getDataDir2
                        eta of ds1 { (#,#) ipv ipv1 ->
                 (# ipv,
                    GHC.Base.++
                      @ GHC.Types.Char
                      ipv1
                      (GHC.CString.unpackAppendCString# "/"# name) #) }) -}
ba074334dc92d0e5a49c3324df29bed7
  getDynLibDir :: GHC.Types.IO GHC.IO.FilePath
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Paths_collatz_conjecture.getDynLibDir1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R)) -}
73ac9ae085ec087fd8cdbd2cd2830b5d
  getDynLibDir1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State#
                             GHC.Prim.RealWorld)[OneShot] ->
                 GHC.Prim.catch#
                   @ GHC.Base.String
                   @ GHC.Exception.SomeException
                   Paths_collatz_conjecture.getDynLibDir3
                     `cast`
                   (GHC.Types.N:IO[0] <GHC.Base.String>_R)
                   Paths_collatz_conjecture.getDynLibDir2
                   eta) -}
2bc3d08f87d05f0b1059d758a49e9b75
  getDynLibDir2 ::
    GHC.Exception.SomeException
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 2,
     Unfolding: (\ (e1 :: GHC.Exception.SomeException)[OneShot]
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case e1 of wild { GHC.Exception.SomeException e100 $dException1 e2 ->
                 case (GHC.Exception.$p1Exception @ e100 $dException1)
                        `cast`
                      (Data.Typeable.Internal.N:Typeable[0] <*>_N <e100>_N)
                        (GHC.Prim.proxy#
                           @ *
                           @ e100) of wild1 { Data.Typeable.Internal.TypeRep dt dt1 ds2 ds3 ds4 ->
                 case GHC.IO.Exception.$fExceptionIOException3 of wild2 { Data.Typeable.Internal.TypeRep dt2 dt3 ds5 ds6 ds7 ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.eqWord# dt dt2) of wild3 {
                   GHC.Types.False
                   -> GHC.Prim.raiseIO#
                        @ GHC.Exception.SomeException
                        @ GHC.Base.String
                        wild
                        eta
                   GHC.Types.True
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.eqWord# dt1 dt3) of wild4 {
                        GHC.Types.False
                        -> GHC.Prim.raiseIO#
                             @ GHC.Exception.SomeException
                             @ GHC.Base.String
                             wild
                             eta
                        GHC.Types.True
                        -> (# eta, Paths_collatz_conjecture.dynlibdir #) } } } } }) -}
5b9c3d9f0864792f9eca9075ceff6f16
  getDynLibDir3 :: GHC.Types.IO GHC.Base.String
  {- Unfolding: (GHC.Magic.lazy
                   @ (GHC.Types.IO GHC.Base.String)
                   Paths_collatz_conjecture.getDynLibDir4
                     `cast`
                   (Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R))) -}
0631a211264de8f682ea53e7e04f2d35
  getDynLibDir4 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1,
     Unfolding: (System.Environment.getEnv1
                   Paths_collatz_conjecture.getDynLibDir5) -}
a78ec4df266c014db634d34c8dd0ed56
  getDynLibDir5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "collatz_conjecture_dynlibdir"#) -}
68313d096ea761c92f47789b0dfd63c5
  getLibDir :: GHC.Types.IO GHC.IO.FilePath
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Paths_collatz_conjecture.getLibDir1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R)) -}
95604fcffe611f27e78c760a9a98038c
  getLibDir1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State#
                             GHC.Prim.RealWorld)[OneShot] ->
                 GHC.Prim.catch#
                   @ GHC.Base.String
                   @ GHC.Exception.SomeException
                   Paths_collatz_conjecture.getLibDir3
                     `cast`
                   (GHC.Types.N:IO[0] <GHC.Base.String>_R)
                   Paths_collatz_conjecture.getLibDir2
                   eta) -}
133d0aeb7474f6130b84e4d788341688
  getLibDir2 ::
    GHC.Exception.SomeException
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 2,
     Unfolding: (\ (e1 :: GHC.Exception.SomeException)[OneShot]
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case e1 of wild { GHC.Exception.SomeException e100 $dException1 e2 ->
                 case (GHC.Exception.$p1Exception @ e100 $dException1)
                        `cast`
                      (Data.Typeable.Internal.N:Typeable[0] <*>_N <e100>_N)
                        (GHC.Prim.proxy#
                           @ *
                           @ e100) of wild1 { Data.Typeable.Internal.TypeRep dt dt1 ds2 ds3 ds4 ->
                 case GHC.IO.Exception.$fExceptionIOException3 of wild2 { Data.Typeable.Internal.TypeRep dt2 dt3 ds5 ds6 ds7 ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.eqWord# dt dt2) of wild3 {
                   GHC.Types.False
                   -> GHC.Prim.raiseIO#
                        @ GHC.Exception.SomeException
                        @ GHC.Base.String
                        wild
                        eta
                   GHC.Types.True
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.eqWord# dt1 dt3) of wild4 {
                        GHC.Types.False
                        -> GHC.Prim.raiseIO#
                             @ GHC.Exception.SomeException
                             @ GHC.Base.String
                             wild
                             eta
                        GHC.Types.True
                        -> (# eta, Paths_collatz_conjecture.libdir #) } } } } }) -}
31cb9e16a65f41d7d2c1d0588944e9d0
  getLibDir3 :: GHC.Types.IO GHC.Base.String
  {- Unfolding: (GHC.Magic.lazy
                   @ (GHC.Types.IO GHC.Base.String)
                   Paths_collatz_conjecture.getLibDir4
                     `cast`
                   (Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R))) -}
b9a574060130c037c4a325955f24b125
  getLibDir4 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1,
     Unfolding: (System.Environment.getEnv1
                   Paths_collatz_conjecture.getLibDir5) -}
09f635e927193cf132c52e33c895bc0f
  getLibDir5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "collatz_conjecture_libdir"#) -}
81027244c3ab516338a3a829ce413036
  getLibexecDir :: GHC.Types.IO GHC.IO.FilePath
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Paths_collatz_conjecture.getLibexecDir1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R)) -}
7eef436be4443466896b6504e6b08cc6
  getLibexecDir1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State#
                             GHC.Prim.RealWorld)[OneShot] ->
                 GHC.Prim.catch#
                   @ GHC.Base.String
                   @ GHC.Exception.SomeException
                   Paths_collatz_conjecture.getLibexecDir3
                     `cast`
                   (GHC.Types.N:IO[0] <GHC.Base.String>_R)
                   Paths_collatz_conjecture.getLibexecDir2
                   eta) -}
36d7fd6f5dd9a29249beabe940a256e0
  getLibexecDir2 ::
    GHC.Exception.SomeException
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 2,
     Unfolding: (\ (e1 :: GHC.Exception.SomeException)[OneShot]
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case e1 of wild { GHC.Exception.SomeException e100 $dException1 e2 ->
                 case (GHC.Exception.$p1Exception @ e100 $dException1)
                        `cast`
                      (Data.Typeable.Internal.N:Typeable[0] <*>_N <e100>_N)
                        (GHC.Prim.proxy#
                           @ *
                           @ e100) of wild1 { Data.Typeable.Internal.TypeRep dt dt1 ds2 ds3 ds4 ->
                 case GHC.IO.Exception.$fExceptionIOException3 of wild2 { Data.Typeable.Internal.TypeRep dt2 dt3 ds5 ds6 ds7 ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.eqWord# dt dt2) of wild3 {
                   GHC.Types.False
                   -> GHC.Prim.raiseIO#
                        @ GHC.Exception.SomeException
                        @ GHC.Base.String
                        wild
                        eta
                   GHC.Types.True
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.eqWord# dt1 dt3) of wild4 {
                        GHC.Types.False
                        -> GHC.Prim.raiseIO#
                             @ GHC.Exception.SomeException
                             @ GHC.Base.String
                             wild
                             eta
                        GHC.Types.True
                        -> (# eta, Paths_collatz_conjecture.libexecdir #) } } } } }) -}
e2e25a5694b3810e82a5bbf0292c5212
  getLibexecDir3 :: GHC.Types.IO GHC.Base.String
  {- Unfolding: (GHC.Magic.lazy
                   @ (GHC.Types.IO GHC.Base.String)
                   Paths_collatz_conjecture.getLibexecDir4
                     `cast`
                   (Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R))) -}
7fce93cd3d8111e1b63d468e394985dd
  getLibexecDir4 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1,
     Unfolding: (System.Environment.getEnv1
                   Paths_collatz_conjecture.getLibexecDir5) -}
19979595db3fd546c7c2e90a7a9cb3ef
  getLibexecDir5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "collatz_conjecture_libexecdir"#) -}
c441df8bd5919b5cd2a8880e9eda5b88
  getSysconfDir :: GHC.Types.IO GHC.IO.FilePath
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Paths_collatz_conjecture.getSysconfDir1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R)) -}
e8ab38ddd43b320be6889032b5fb23b8
  getSysconfDir1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State#
                             GHC.Prim.RealWorld)[OneShot] ->
                 GHC.Prim.catch#
                   @ GHC.Base.String
                   @ GHC.Exception.SomeException
                   Paths_collatz_conjecture.getSysconfDir3
                     `cast`
                   (GHC.Types.N:IO[0] <GHC.Base.String>_R)
                   Paths_collatz_conjecture.getSysconfDir2
                   eta) -}
e912924665080ff0b4598b48b81e55b3
  getSysconfDir2 ::
    GHC.Exception.SomeException
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 2,
     Unfolding: (\ (e1 :: GHC.Exception.SomeException)[OneShot]
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case e1 of wild { GHC.Exception.SomeException e100 $dException1 e2 ->
                 case (GHC.Exception.$p1Exception @ e100 $dException1)
                        `cast`
                      (Data.Typeable.Internal.N:Typeable[0] <*>_N <e100>_N)
                        (GHC.Prim.proxy#
                           @ *
                           @ e100) of wild1 { Data.Typeable.Internal.TypeRep dt dt1 ds2 ds3 ds4 ->
                 case GHC.IO.Exception.$fExceptionIOException3 of wild2 { Data.Typeable.Internal.TypeRep dt2 dt3 ds5 ds6 ds7 ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.eqWord# dt dt2) of wild3 {
                   GHC.Types.False
                   -> GHC.Prim.raiseIO#
                        @ GHC.Exception.SomeException
                        @ GHC.Base.String
                        wild
                        eta
                   GHC.Types.True
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.eqWord# dt1 dt3) of wild4 {
                        GHC.Types.False
                        -> GHC.Prim.raiseIO#
                             @ GHC.Exception.SomeException
                             @ GHC.Base.String
                             wild
                             eta
                        GHC.Types.True
                        -> (# eta, Paths_collatz_conjecture.sysconfdir #) } } } } }) -}
cf320e6ca9fcc7f534b5fea2f9ebfb72
  getSysconfDir3 :: GHC.Types.IO GHC.Base.String
  {- Unfolding: (GHC.Magic.lazy
                   @ (GHC.Types.IO GHC.Base.String)
                   Paths_collatz_conjecture.getSysconfDir4
                     `cast`
                   (Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R))) -}
14317bc443e996473a12d20c5dfbf4c1
  getSysconfDir4 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1,
     Unfolding: (System.Environment.getEnv1
                   Paths_collatz_conjecture.getSysconfDir5) -}
c84647b5d5cd4c1869c313715893cb6a
  getSysconfDir5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "collatz_conjecture_sysconfdir"#) -}
ede57eb546cd1ff62f5f0c9166219a47
  libdir :: GHC.IO.FilePath
  {- Unfolding: (GHC.CString.unpackCString#
                   "/Users/felixdescoteaux/exercism/haskell/collatz-conjecture/.stack-work/install/x86_64-osx/lts-8.21/8.0.2/lib/x86_64-osx-ghc-8.0.2/collatz-conjecture-1.1.1.1-4Q7m0FsPMUFufUXTepMSJ"#) -}
96072ae557f7b3d8782ae72e393bbf32
  libexecdir :: GHC.IO.FilePath
  {- Unfolding: (GHC.CString.unpackCString#
                   "/Users/felixdescoteaux/exercism/haskell/collatz-conjecture/.stack-work/install/x86_64-osx/lts-8.21/8.0.2/libexec"#) -}
aa785a63543ab78eb0e0ef802cace679
  sysconfdir :: GHC.IO.FilePath
  {- Unfolding: (GHC.CString.unpackCString#
                   "/Users/felixdescoteaux/exercism/haskell/collatz-conjecture/.stack-work/install/x86_64-osx/lts-8.21/8.0.2/etc"#) -}
4214bca9998686390e550c236e812af6
  version :: Data.Version.Version
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Data.Version.Version
                   Paths_collatz_conjecture.version1
                   (GHC.Types.[] @ GHC.Base.String)) -}
d0d0e1e452d7c730e0a030bce3fe8e05
  version1 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Paths_collatz_conjecture.version5
                   Paths_collatz_conjecture.version2) -}
d9f8384b97c31e6fc4038c00a51169d7
  version2 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Paths_collatz_conjecture.version5
                   Paths_collatz_conjecture.version3) -}
755491f2609c4a90bf419bfe818c613b
  version3 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Paths_collatz_conjecture.version5
                   Paths_collatz_conjecture.version4) -}
0eb4c5e1b795717e3df6e18bf5f886ae
  version4 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Paths_collatz_conjecture.version5
                   (GHC.Types.[] @ GHC.Types.Int)) -}
6598b97d7345a12e51919b1e13b6eda5
  version5 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 1#) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

